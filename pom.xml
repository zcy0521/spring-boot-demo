<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- =========================================================
         1.POM 基本配置
         https://maven.apache.org/pom.html
         https://maven.apache.org/pom.html#Dependencies
         https://maven.apache.org/pom.html#Aggregation
         ========================================================= -->

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>spring-boot-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging> <!-- 默认jar web项目war 项目聚合pom -->

    <name>demo</name>
    <description>SpringBoot 多模块示例</description>
    <url>http://localhost:8080</url>


    <!-- 继承SpringBoot提供的父项目 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
    </parent>

    <!-- 依赖 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <!-- https://search.maven.org/classic/ -->
        <commons-lang3.version>3.7</commons-lang3.version>
        <mysql.version>8.0.12</mysql.version>
        <druid.version>1.1.10</druid.version>
        <javax-inject.version>1</javax-inject.version>
        <lombok.version>1.18.2</lombok.version>
        <mybatis.version>1.3.2</mybatis.version>
        <mybatis-mapper.version>2.0.3</mybatis-mapper.version>
        <mybatis-pagehelper.version>1.2.5</mybatis-pagehelper.version>
        <jackson.version>2.9.0</jackson.version>
        <json.version>20180130</json.version>
        <fastjson.version>1.2.49</fastjson.version>
        <protobuf-java.version>3.16.3</protobuf-java.version>
        <aliyun-log-logback-appender.version>0.1.12</aliyun-log-logback-appender.version>
        <aliyun-log-log4j2-appender.version.version>0.1.10</aliyun-log-log4j2-appender.version.version>
        <alipay.version>3.3.4.ALL</alipay.version>
        <wxpay.version>0.0.3</wxpay.version>
    </properties>

    <!-- 声明子模块 -->
    <modules>
        <!-- module值：从demo到spring-boot-xxx的相对路径 -->
        <module>spring-boot-database-connector-mysql</module>
        <module>spring-boot-database-connection-pools-druid</module>
        <module>spring-boot-logging-logback</module>
        <module>spring-boot-logging-log4j2</module>
        <module>spring-boot-data-jpa</module>
        <module>spring-boot-data-mybatis</module>
        <module>spring-boot-data-redis</module>
        <module>spring-boot-data-mongodb</module>
        <module>spring-boot-service</module>
        <module>spring-boot-web-velocity</module>
        <module>spring-boot-web-freemarker</module>
        <module>spring-boot-web-jsp</module>
        <module>spring-boot-web-api</module>
        <module>spring-boot-bean-dozer</module>
        <module>spring-boot-bean-mapstruct</module>
        <module>spring-boot-json-jackson</module>
        <module>spring-boot-json-fastjson</module>
        <module>spring-boot-dubbo-consumer</module>
        <module>spring-boot-dubbo-provider</module>
        <module>spring-boot-mq-rabbitmq</module>
        <module>spring-boot-mq-kafka</module>
        <module>spring-boot-document-poi</module>
        <module>spring-boot-document-itext</module>
        <module>spring-boot-document-xcelite</module>
        <module>spring-boot-pay-alipay</module>
        <module>spring-boot-pay-wxpay</module>
        <module>spring-boot-tutorial</module>
    </modules>

    <!-- dependencies即使在子项目中不写该依赖项，那么子项目仍然会从父项目中继承该依赖项 -->
    <dependencies>
        <!-- spring-boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!-- spring-boot-web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- spring-boot-test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- javax -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax-inject.version}</version>
        </dependency>

        <!-- apache-commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
    </dependencies>

    <!-- dependencyManagement里只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖 -->
    <dependencyManagement>
        <dependencies>
            <!-- mysql -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!-- druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- mybatis -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <!-- mybatis-mapper -->
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${mybatis-mapper.version}</version>
            </dependency>
            <!-- mybatis-pagehelper -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${mybatis-pagehelper.version}</version>
            </dependency>

            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-json-org</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- json -->
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${json.version}</version>
            </dependency>

            <!-- fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- aliyun-sls -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf-java.version}</version>
            </dependency>
            <!-- aliyun-sls-logback -->
            <dependency>
                <groupId>com.aliyun.openservices</groupId>
                <artifactId>aliyun-log-logback-appender</artifactId>
                <version>${aliyun-log-logback-appender.version}</version>
            </dependency>
            <!-- aliyun-sls-log4j -->
            <dependency>
                <groupId>com.aliyun.openservices</groupId>
                <artifactId>aliyun-log-log4j2-appender</artifactId>
                <version>${aliyun-log-log4j2-appender.version}</version>
            </dependency>

            <!-- alipay -->
            <dependency>
                <groupId>com.alipay.sdk</groupId>
                <artifactId>alipay-sdk-java</artifactId>
                <version>${alipay.version}</version>
            </dependency>

            <!-- wxpay -->
            <dependency>
                <groupId>com.github.wxpay</groupId>
                <artifactId>wxpay-sdk</artifactId>
                <version>${wxpay.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>



    <!-- =========================================================
         2.POM 编译配置
         https://maven.apache.org/pom.html#Build_Settings
         ========================================================= -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- =========================================================
         3.POM 环境配置
         https://maven.apache.org/pom.html#Environment_Settings
         https://maven.apache.org/pom.html#Repositories
         https://maven.apache.org/pom.html#Profiles
         ========================================================= -->

</project>